% Purpose: here we mainly get the Essential Matrix E.

%%
P=[81,91,27,96,95,14,79,3,67,39,70,4,69,3,76,48,70,67,11,34;
    90,63,54,15,48,42,95,84,75,65,3,9,31,43,79,44,75,65,49,58;
    12,9,95,97,80,91,65,93,74,17,27,82,95,38,18,64,27,16,95,22];

P=P(:,B); % choose the points only when both the z>0 for their positions in cam01 and cam02

R1=[0.946124980405000,0.160302322240969,0.281337318779059;
    -0.313867348151978,0.240453483361454,0.918514784912790;
    0.0795915147341879,-0.957332381058687,0.277812712018046];

P1 = R1*P+[10 20 25]'*ones(1,size(P,2));

R2=[0.636783112327072,0.278296391357533,0.719067720324326;
    -0.754427870730302,0.417444587036299,0.506535886803133;
    -0.159203818171522,-0.865038227659026,0.475776217320854];

P2 = R2*P+[20 15 18]'*ones(1,size(P,2));
 
% K is camera internal matrix
K=[0.1, 0, 0
    0, 0.1, 0
    0, 0, 1];

uv1 = K*P1;
for j=1:size(uv1, 2)
   uv1(:,j)=uv1(:,j)/uv1(3,j); 
end

uv2 = K*P2;
for j=1:size(uv2, 2)
   uv2(:,j)=uv2(:,j)/uv2(3,j); 
end

tmp=[];
for i=1:8
    tmp=[tmp; uv1(1,i)*uv2(1,i), uv1(1,i)*uv2(2,i), uv1(1,i), uv1(2,i)*uv2(1,i), uv1(2,i)*uv2(2,i), uv1(2,i), uv2(1,i), uv2(2,i), 1];
end

y=null( tmp, rank(tmp) );
y=y';
% F is Fundamental Matrix
F=[y(1:3); y(4:6); y(7:9)];



E=K'*F*K;

[U, S, V] = svd(E)
